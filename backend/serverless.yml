# Serverless Framework configuration for Supervaise Notes backend
service: notes-backend

provider:
  name: aws
  runtime: python3.9 # Lambda runtime
  region: ap-southeast-1 # AWS region
  environment:
    TABLE_NAME: notesTable # DynamoDB table name as env var
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:DeleteItem
            - dynamodb:Scan
          Resource:
            - arn:aws:dynamodb:ap-southeast-1:*:table/notesTable # Allow access to notesTable only

functions:
  getNotes:
    handler: handler.get_notes # Python handler function
    events:
      - http:
          path: notes # GET /notes
          method: get
          cors: true # Enable CORS for frontend access
  addNote:
    handler: handler.add_note
    events:
      - http:
          path: notes # POST /notes
          method: post
          cors: true
  deleteNote:
    handler: handler.delete_note
    events:
      - http:
          path: notes/{id} # DELETE /notes/{id}
          method: delete
          cors: true

resources:
  Resources:
    NotesTable:
      Type: AWS::DynamoDB::Table # Create DynamoDB table
      Properties:
        TableName: notesTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S # 'id' is a string
        KeySchema:
          - AttributeName: id
            KeyType: HASH # Primary key
        BillingMode: PAY_PER_REQUEST # On-demand billing
